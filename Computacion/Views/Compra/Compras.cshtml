@model Computacion.Models.Compra
@using Microsoft.AspNet.Identity;
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Compra de Artículos</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.IdArticulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IdArticulo, new { htmlAttributes = new { autocomplete = "off" } })
            <input id="TextArticulo" autocomplete="off" />
            <div id="DivDinamicoArticulo"></div>
            @Html.ValidationMessageFor(model => model.IdArticulo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrecioCompra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrecioCompra, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <input id="TextPrecioCompraViejo" autocomplete="off" disabled="disabled" /> Precio compra anterior
            @Html.ValidationMessageFor(model => model.PrecioCompra, "", new { @class = "text-danger" })
        </div>
    </div>    
    <div class="form-group">
        @Html.LabelFor(model => model.PrecioVenta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrecioVenta, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <input id="TextPrecioVentaViejo" autocomplete="off" disabled="disabled" /> Precio venta anterior
            @Html.ValidationMessageFor(model => model.PrecioVenta, "", new { @class = "text-danger" })
        </div>
    </div>    
    <div class="form-group">
        @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha, "{dd/MM/yyyy}")
            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Comprar" class="btn btn-danger" />
        </div>
    </div>
</div>
   

    <input type="text" class="form-control" id="idArtciculoCompra"
          style="visibility:hidden"
           value="@(ViewBag.idArticuloCompra ?? String.Empty)">
}

    <div>
        <a href="@Url.Action("Index", "Home")" class="btn btn-danger">Página Principal</a>
        @*@Html.ActionLink("Página Principal", "Index", "Home") |*@
        <a href="@Url.Action("Index")" class="btn btn-danger">Lista Compras</a>
        @*@Html.ActionLink("Lista Compras", "Index")*@
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Mis Scripts/Compras.js"></script>
}



<script>
    $(document).ready(function () {

        var idArticulo =$("#idArtciculoCompra").val();
        if (idArticulo != null && idArticulo > 0)
        {

            BuscarArticuloPorId(idArticulo);

        }




    });



</script>

@*<script>
    function BuscarArticuloPorId(idArticulo) {
        var IdArticulo = idArticulo;

        $.ajax({

            url: "/Articulo/BuscarArticuloPorId",
            data: { "id": IdArticulo },
            type: "post",
            cache: false,
            success: function (ArticuloRetorno) {
                $("#TextArticulo").val(ArticuloRetorno.Descripcion);
                $("#IdArticulo").val(ArticuloRetorno.Id);
                $("#TextPrecioCompraViejo").val(ArticuloRetorno.PrecioCompra);
                $("#TextPrecioVentaViejo").val(ArticuloRetorno.PrecioVenta);
                $("#DivDinamicoArticulo").html("");
                $("#Cantidad").focus();
            },
            error: function (ArticuloRetorno) {

                alert("Se ha producido un error");

            }

        });


    }


    $(function () {
        $("#TextArticulo").keyup(function () {

            var txt = $(this).val();

            if (txt == null || txt == "") {

                $("#DivDinamicoArticulo").html("");

            } else {
                BuscarArticuloCompra(txt);
                //SelectedTr();
            }
        });

        $("#IdArticulo").change(

            function () {

                var idArticulo = $(this).val();

                if (idArticulo == null || idArticulo == 0) {
                    $("#TextArticulo").val("");
                    return;
                } else {
                    BuscarArticuloPorId(idArticulo);
                }

            }
        )
    });

    function BuscarArticuloCompra(textoABuscar) {


        if (textoABuscar == null || textoABuscar == "") {

            $("#DivDinamicoArticulo").html("");
            return;
        }

        //Creamos una funcion ajax que envie los datos al metodo Buscar del Controler Persona
        $.ajax({
            //Direccion donde nos queremos comunicar Controller/Metodo
            url: "/Articulo/BuscarArticulos",
            //parametros que le pasamos a el Metodo del Controller ( si se fijan en el Controller el metodo Busqueda, recibe como parametro "filtro")
            data: { "articulo": textoABuscar },
            //El tipo es post ya que enviamos datos
            type: "post",
            cache: false,
            success: function (retorno) {
                //Si el metodo busqueda del controller devuelve algo, lo guardamos en retorno - lo que devuelve es la pagina (View) buscar, osea es un pedazo de codigo HTML que podemos insertar en el DivDinamico
                if (retorno == null || retorno == "") {

                    $("#DivDinamicoArticulo").html("<p class='SinResultados'>No Se encontraron resutado</p>");
                    return;

                }
                $("#DivDinamicoArticulo").html(retorno);

            },
            error: function (retorno) {
                //Si el metodo ajax falla entra por aca y nos advierte de un error

                alert("Se ha producido un error");


            }
        });


    }
</script>*@